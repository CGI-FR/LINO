// Code generated by mockery v1.0.0. DO NOT EDIT.

package push

import mock "github.com/stretchr/testify/mock"

// MockDataDestination is an autogenerated mock type for the DataDestination type
type MockDataDestination struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockDataDestination) Close() *Error {
	ret := _m.Called()

	var r0 *Error
	if rf, ok := ret.Get(0).(func() *Error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Error)
		}
	}

	return r0
}

// Commit provides a mock function with given fields:
func (_m *MockDataDestination) Commit() *Error {
	ret := _m.Called()

	var r0 *Error
	if rf, ok := ret.Get(0).(func() *Error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Error)
		}
	}

	return r0
}

// Open provides a mock function with given fields: plan, mode, disableConstraints
func (_m *MockDataDestination) Open(plan Plan, mode Mode, disableConstraints bool) *Error {
	ret := _m.Called(plan, mode, disableConstraints)

	var r0 *Error
	if rf, ok := ret.Get(0).(func(Plan, Mode, bool) *Error); ok {
		r0 = rf(plan, mode, disableConstraints)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Error)
		}
	}

	return r0
}

// RowWriter provides a mock function with given fields: table
func (_m *MockDataDestination) RowWriter(table Table) (RowWriter, *Error) {
	ret := _m.Called(table)

	var r0 RowWriter
	if rf, ok := ret.Get(0).(func(Table) RowWriter); ok {
		r0 = rf(table)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(RowWriter)
		}
	}

	var r1 *Error
	if rf, ok := ret.Get(1).(func(Table) *Error); ok {
		r1 = rf(table)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*Error)
		}
	}

	return r0, r1
}
