// Code generated by mockery v1.0.0. DO NOT EDIT.

package push

import mock "github.com/stretchr/testify/mock"

// MockRelation is an autogenerated mock type for the Relation type
type MockRelation struct {
	mock.Mock
}

// Child provides a mock function with given fields:
func (_m *MockRelation) Child() Table {
	ret := _m.Called()

	var r0 Table
	if rf, ok := ret.Get(0).(func() Table); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Table)
		}
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *MockRelation) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// OppositeOf provides a mock function with given fields: table
func (_m *MockRelation) OppositeOf(table Table) Table {
	ret := _m.Called(table)

	var r0 Table
	if rf, ok := ret.Get(0).(func(Table) Table); ok {
		r0 = rf(table)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Table)
		}
	}

	return r0
}

// Parent provides a mock function with given fields:
func (_m *MockRelation) Parent() Table {
	ret := _m.Called()

	var r0 Table
	if rf, ok := ret.Get(0).(func() Table); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Table)
		}
	}

	return r0
}
