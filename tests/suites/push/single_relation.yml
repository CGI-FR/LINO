name: push single relation
testcases:
- name: prepare test
  steps:
    # Clean working directory
    - script: rm -f *
    - script: lino dataconnector add --read-only source postgresql://postgres:sakila@source:5432/postgres?sslmode=disable
    - script: lino relation extract source
    - script: lino table extract source
    - script: lino id create public.store
    - script: lino dataconnector add dest postgresql://postgres:sakila@dest:5432/postgres?sslmode=disable
    - script: sed -i "s/true/false/g" ingress-descriptor.yaml
    - script: lino id set-child-lookup staff_store_id_fkey true
    - script: echo '{"address_id":1,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Mike","last_name":"Hillyer","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' > store1.jsonl
    - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}' > store2.jsonl
    - script: cat store1.jsonl store2.jsonl | lino push truncate dest

- name: push insert with conflict
  steps:
    - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Mike","last_name":"Hillyer","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"iVBORw0KWgo=","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' | lino push dest
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty
    - script: lino pull dest --limit 1 -f store_id=1
      assertions:
        # push has no effect in insert mode
        - result.systemout ShouldEqual {"address_id":1,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Mike","last_name":"Hillyer","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}
    - script: lino pull dest --limit 1 -f store_id=2
      assertions:
        - result.systemout ShouldEqual {"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}

- name: push insert without conflict
  steps:
    - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":3,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Mike3","last_name":"Hillyer3","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"aVZCT1J3MEtXZ289","staff_id":3,"store_id":3,"username":"Mike"}],"store_id":3}' | lino push dest
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty
    - script: lino pull dest --limit 1 -f store_id=3
      assertions:
        # FIXME : blob objects are not decoded from base 64 encoding
        - result.systemout ShouldEqual {"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":3,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Mike3","last_name":"Hillyer3","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"YVZaQ1QxSjNNRXRYWjI4OQ==","staff_id":3,"store_id":3,"username":"Mike"}],"store_id":3}
    - script: lino pull dest --limit 1 -f store_id=2
      assertions:
        - result.systemout ShouldEqual {"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}


- name: push truncate child
  steps:
    - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Lino","last_name":"Truncate","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"iVBORw0KWgo=","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' | lino push truncate dest
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty
    - script: lino pull dest --limit 1 -f store_id=1
      assertions:
        # FIXME : blob objects are not decoded from base 64 encoding
        - result.systemout ShouldEqual {"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Lino","last_name":"Truncate","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"aVZCT1J3MEtXZ289","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}
    - script: lino pull dest --limit 1 -f store_id=2
      assertions:
        - result.systemout ShouldBeEmpty

- name: push read only
  steps:
    - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Lino","last_name":"Truncate","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"iVBORw0KWgo=","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' | lino push truncate source
      assertions:
        - result.code ShouldEqual 1
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldContainSubstring "'source' is a read only dataconnector"


- name: push 500 lines
  steps:
    - script: yes '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Lino","last_name":"Truncate","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"iVBORw0KWgo=","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' | head -n 500 | lino push dest
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty

- name: push 10000 lines
  steps:
    - script: yes '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Lino","last_name":"Truncate","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"iVBORw0KWgo=","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' | head -n 10000 | lino push dest
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty

- name: push 100000 lines
  steps:
    - script: yes '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":1,"staff_store_id_fkey":[{"active":true,"address_id":3,"email":"Mike.Hillyer@sakilastaff.com","first_name":"Lino","last_name":"Truncate","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":"iVBORw0KWgo=","staff_id":1,"store_id":1,"username":"Mike"}],"store_id":1}' | head -n 10000 | lino push --commitSize 100 dest
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty