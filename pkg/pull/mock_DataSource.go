// Code generated by mockery v1.0.0. DO NOT EDIT.

package pull

import mock "github.com/stretchr/testify/mock"

// MockDataSource is an autogenerated mock type for the DataSource type
type MockDataSource struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockDataSource) Close() *Error {
	ret := _m.Called()

	var r0 *Error
	if rf, ok := ret.Get(0).(func() *Error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Error)
		}
	}

	return r0
}

// Open provides a mock function with given fields:
func (_m *MockDataSource) Open() *Error {
	ret := _m.Called()

	var r0 *Error
	if rf, ok := ret.Get(0).(func() *Error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Error)
		}
	}

	return r0
}

// RowReader provides a mock function with given fields: source, filter
func (_m *MockDataSource) RowReader(source Table, filter Filter) (RowReader, *Error) {
	ret := _m.Called(source, filter)

	var r0 RowReader
	if rf, ok := ret.Get(0).(func(Table, Filter) RowReader); ok {
		r0 = rf(source, filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(RowReader)
		}
	}

	var r1 *Error
	if rf, ok := ret.Get(1).(func(Table, Filter) *Error); ok {
		r1 = rf(source, filter)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*Error)
		}
	}

	return r0, r1
}
