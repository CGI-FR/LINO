# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run.
on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Start services
        run: docker compose up -d vscode

      - name: Init env
        run: | 
          docker compose exec -T -w /workspace -u root vscode usermod -u $(id -u) vscode
          docker compose exec -T -w /workspace -u root vscode groupmod -g $(id -g) vscode
          docker compose exec -T -w /workspace -u root vscode chown $(id -u):$(id -g) tests/workspace
          docker compose exec -T -w /workspace -u vscode vscode touch /home/vscode/.dockerhub.yml /home/vscode/.github.yml

      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
        run: |
          docker compose exec -e GITHUB_TOKEN=${GITHUB_TOKEN} -T -u vscode vscode bash -c 'echo "GITHUB_TOKEN: ${GITHUB_TOKEN}" > ~/.github.yml'
          docker compose exec -T -u vscode vscode bash -c 'echo "DOCKERHUB_USER: cgibot" > ~/.dockerhub.yml'
          docker compose exec -e DOCKERHUB_PASS=${DOCKERHUB_PASS} -T -u vscode vscode bash -c 'echo "DOCKERHUB_PASS: ${DOCKERHUB_PASS}" >> ~/.dockerhub.yml'
          docker compose exec \
            -T \
            -w /workspace \
            -u vscode \
            -e PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin:/home/vscode/go/bin:/workspace/bin \
            vscode \
            neon -props "{tag: ${CI_ACTION_REF_NAME}, MODULE: github.com/${CI_REPOSITORY,,}, BY: ${CI_ACTOR}, latest: true}" publish docker-push
      - name: Test version
        run: docker compose exec -T -u vscode vscode /workspace/bin/dist/cmd/lino_linux_amd64_v1/lino --version

  homebrew:
    name: Bump Homebrew formula
    needs: build
    if: github.event_name != 'push' || !contains(github.ref_name, '-')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Extract version
        id: extract-version
        run: |
          echo "tag-name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: lino
          formula-path: Formula/lino.rb
          homebrew-tap: CGI-FR/homebrew-lino
          base-branch: main
          download-url: >-
            https://github.com/CGI-FR/LINO/releases/download/${{ steps.extract-version.outputs.tag-name }}/LINO_${{ steps.extract-version.outputs.version }}_darwin_amd64.tar.gz
          commit-message: |
            {{formulaName}} {{version}}

            Created by https://github.com/mislav/bump-homebrew-formula-action
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
