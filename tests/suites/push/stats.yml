# Copyright (C) 2021 CGI France
#
# This file is part of LINO.
#
# LINO is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# LINO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LINO.  If not, see <http:#www.gnu.org/licenses/>.

name: push statistics
testcases:
  - name: prepare test
    steps:
      # Clean working directory
      - script: rm -f *
      - script: lino dataconnector add --read-only source postgresql://postgres:sakila@source:5432/postgres?sslmode=disable
      - script: lino relation extract source
      - script: lino table extract source
      - script: lino id create store
      - script: lino dataconnector add dest postgresql://postgres:sakila@dest:5432/postgres?sslmode=disable
      - script: sed -i "s/true/false/g" ingress-descriptor.yaml
      - script: lino id set-child-lookup staff_store_id_fkey true
      - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}'| lino push -d dest
      - script: lino pull dest --limit 1 -f store_id=2
        assertions:
          - result.systemout ShouldEqual {"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"store_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}]}

  - name: push delete existing data
    steps:
      - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}' | lino push -d delete dest -v 5 --log-json
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldBeEmpty
          - result.systemerr ShouldContainSubstring {"level":"info","stats":{"inputLinesCount":1,"createdLinesCount":{},"deletedLinesCount":{"staff":1,"store":1},"commitsCount":0},"return":0

      - script: lino pull dest --limit 1 -f store_id=2
        assertions:
          - result.systemout ShouldBeEmpty
          - result.systemerr ShouldBeEmpty

  - name: restore
    steps:
      # restore entry
      - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}'| lino push -d dest

  - name: push delete existing data with json dump file
    steps:
      - script: rm -f lino-push-delete-stats.json
      - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}' | lino push -d delete dest -v 5 --log-json --stats lino-push-delete-stats.json
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldBeEmpty
          - result.systemerr ShouldContainSubstring {"level":"info","stats":{"inputLinesCount":1,"createdLinesCount":{},"deletedLinesCount":{"staff":1,"store":1},"commitsCount":0},"return":0

      - script: cat lino-push-delete-stats.json
        assertions:
          - result.systemout ShouldContainSubstring {"inputLinesCount":1,"createdLinesCount":{},"deletedLinesCount":{"staff":1,"store":1},"commitsCount":0}
          - result.systemout ShouldContainSubstring duration

  - name: restore with stats
    steps:
      # restore entry
      - script: rm -f lino-push-stats.json
      - script: echo '{"address_id":2,"last_update":"2006-02-15T09:57:12Z","manager_staff_id":2,"staff_store_id_fkey":[{"active":true,"address_id":4,"email":"Jon.Stephens@sakilastaff.com","first_name":"Jon","last_name":"Stephens","last_update":"2006-05-16T16:13:11.79328Z","password":"8cb2237d0679ca88db6464eac60da96345513964","picture":null,"staff_id":2,"store_id":2,"username":"Jon"}],"store_id":2}'| lino push -d dest --stats lino-push-stats.json
      - script: cat lino-push-stats.json
        assertions:
          - result.systemout ShouldContainSubstring {"inputLinesCount":1,"createdLinesCount":{
          - result.systemout ShouldContainSubstring duration
