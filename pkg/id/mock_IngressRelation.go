// Code generated by mockery v1.0.0. DO NOT EDIT.

package id

import mock "github.com/stretchr/testify/mock"

// MockIngressRelation is an autogenerated mock type for the IngressRelation type
type MockIngressRelation struct {
	mock.Mock
}

// Child provides a mock function with given fields:
func (_m *MockIngressRelation) Child() Table {
	ret := _m.Called()

	var r0 Table
	if rf, ok := ret.Get(0).(func() Table); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Table)
		}
	}

	return r0
}

// LookUpChild provides a mock function with given fields:
func (_m *MockIngressRelation) LookUpChild() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// LookUpParent provides a mock function with given fields:
func (_m *MockIngressRelation) LookUpParent() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *MockIngressRelation) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Parent provides a mock function with given fields:
func (_m *MockIngressRelation) Parent() Table {
	ret := _m.Called()

	var r0 Table
	if rf, ok := ret.Get(0).(func() Table); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Table)
		}
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *MockIngressRelation) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
