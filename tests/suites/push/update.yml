name: push update
testcases:
- name: push update single relation
  steps:
    - script: rm -f *
    - script: lino dataconnector add source postgresql://postgres:sakila@source:5432/postgres?sslmode=disable
    - script: cp ../../.env .env && docker-compose stop source && docker-compose rm -f source && docker-compose up -d source
      assertions:
        - result.code ShouldEqual 0
    - script: count=0; while ! lino dc ping source; do echo wait $count; ((count++)) && ((count>=10)) && break; sleep 1; done
      assertions:
        - result.code ShouldEqual 0
    - script: lino relation extract source
    - script: lino table extract source
    - script: lino id create store
    - script: sed -i "s/true/false/g" ingress-descriptor.yaml
    - script: lino pull source --filter store_id=1 > store.json
    - script: cat store.json
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldContainSubstring "address_id":1
        - result.systemout ShouldContainSubstring "store_id":1
        - result.systemerr ShouldBeEmpty
    - script: sed -i 's/"address_id":1/"address_id":2/g' store.json
    - script: lino push update source < store.json
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldBeEmpty
        - result.systemerr ShouldBeEmpty
    - script: lino pull source --filter store_id=1
      assertions:
        - result.code ShouldEqual 0
        - result.systemout ShouldContainSubstring "address_id":2
        - result.systemout ShouldContainSubstring "store_id":1
        - result.systemerr ShouldBeEmpty