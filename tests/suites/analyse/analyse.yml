# Copyright (C) 2023 CGI France
#
# This file is part of LINO.
#
# LINO is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# LINO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LINO.  If not, see <http:#www.gnu.org/licenses/>.

name: analyse command
testcases:
  - name: prepare test
    steps:
      - script: "rm -rf * || :"
      - script: lino dataconnector add source 'postgresql://postgres:sakila@source:5432/postgres?sslmode=disable'
      - script: lino table extract source
        assertions:
          - result.systemerr ShouldBeEmpty
      - script: lino table add-column actor first_name
        assertions:
          - result.systemerr ShouldBeEmpty
  - name: analyse
    steps:
      - script: lino analyse source
        assertions:
          - result.code ShouldEqual 0
          - |
            result.systemout ShouldContainSubstring "database: source"
          - |
            result.systemout ShouldContainSubstring "    - name: actor"
          - |
            result.systemout ShouldContainSubstring "        - name: first_name"
  - name: sample-size
    steps:
      - script: lino analyse source --sample-size 10 | grep -e "^                - " | wc -l
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring 19
  - name: distinct
    steps:
      - script: lino analyse source --distinct
        assertions:
          - result.code ShouldEqual 0
          - |
            result.systemout ShouldContainSubstring "distinct: 1"
  - name: limit
    steps:
      - script: lino analyse source --limit 1
        assertions:
          - result.code ShouldEqual 0
          - |
            result.systemout ShouldContainSubstring "count: 1"
  - name: where
    steps:
      - script: lino analyse source --where "actor=first_name like 'A%'"
        assertions:
          - result.code ShouldEqual 0
          - |
            result.systemout ShouldContainSubstring "min: ADAM"
          - |
            result.systemout ShouldContainSubstring "max: AUDREY"
  - name: exclude
    steps:
      - script: lino table add-column actor last_name
      - script: lino analyse source | grep -e "^        - " | wc -l
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring 2
      - script: lino analyse source --exclude actor=first_name | grep -e "^        - " | wc -l
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring 1
      - script: lino analyse source --exclude actor=last_name | grep -e "^        - " | wc -l
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring 1
      - script: lino analyse source --exclude actor=last_name,first_name | grep -e "^        - " | wc -l
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring 0
